package io.arconia.docling.client.convert.request.options;

import java.util.HashMap;
import java.util.Map;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

import org.jspecify.annotations.Nullable;
import org.springframework.util.Assert;

/**
 * Options for running a local vision-language model for the VLM pipeline.
 * The parameters refer to a model hosted on Hugging Face.
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
public record VlmModelLocal(

        @JsonProperty("repo_id")
        String repoId,

        @JsonProperty("prompt")
        @Nullable
        String prompt,

        @JsonProperty("scale")
        @Nullable
        Integer scale,

        @JsonProperty("response_format")
        ResponseFormat responseFormat,

        @JsonProperty("inference_framework")
        InferenceFramework inferenceFramework,

        @JsonProperty("transformers_model_type")
        @Nullable
        TransformersModelType transformersModelType,

        @JsonProperty("extra_generation_config")
        @Nullable
        Map<String,Object> extraGenerationConfig

) {

    public VlmModelLocal {
        Assert.hasText(repoId, "repoId cannot be null or empty");
        Assert.notNull(responseFormat, "responseFormat cannot be null");
        Assert.notNull(inferenceFramework, "inferenceFramework cannot be null");

        if (extraGenerationConfig != null) {
            extraGenerationConfig = new HashMap<>(extraGenerationConfig);
        }
    }

    public static Builder builder() {
        return new Builder();
    }

    public static class Builder {
        @Nullable private String repoId;
        @Nullable private String prompt;
        @Nullable private Integer scale;
        @Nullable private ResponseFormat responseFormat;
        @Nullable private InferenceFramework inferenceFramework;
        @Nullable private TransformersModelType transformersModelType;
        @Nullable private Map<String,Object> extraGenerationConfig;

        private Builder() {}

        /**
         * Repository id from the Hugging Face Hub.
         */
        public Builder repoId(String repoId) {
            this.repoId = repoId;
            return this;
        }

        /**
         * Prompt used when calling the vision-language model.
         */
        public Builder prompt(String prompt) {
            this.prompt = prompt;
            return this;
        }

        /**
         * Scale factor of the images used.
         */
        public Builder scale(Integer scale) {
            this.scale = scale;
            return this;
        }

        /**
         * Type of response generated by the model.
         */
        public Builder responseFormat(ResponseFormat responseFormat) {
            this.responseFormat = responseFormat;
            return this;
        }

        /**
         * Inference framework to use.
         */
        public Builder inferenceFramework(InferenceFramework inferenceFramework) {
            this.inferenceFramework = inferenceFramework;
            return this;
        }

        /**
         * Type of transformers auto-model to use.
         */
        public Builder transformersModelType(TransformersModelType transformersModelType) {
            this.transformersModelType = transformersModelType;
            return this;
        }

        /**
         * Config from <a href="https://huggingface.co/docs/transformers/en/main_classes/text_generation#transformers.GenerationConfig">Hugging Face</a>
         */
        public Builder extraGenerationConfig(Map<String,Object> extraGenerationConfig) {
            this.extraGenerationConfig = extraGenerationConfig;
            return this;
        }

        public VlmModelLocal build() {
            return new VlmModelLocal(repoId, prompt, scale, responseFormat, inferenceFramework, transformersModelType, extraGenerationConfig);
        }

    }

    /**
     * Inference framework to use.
     */
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public enum InferenceFramework {

        @JsonProperty("mlx")
        MLX,
        @JsonProperty("transformers")
        TRANSFORMERS,
        @JsonProperty("vllm")
        VLLM

    }

    /**
     * Type of transformers auto-model to use.
     */
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public enum TransformersModelType {

        @JsonProperty("automodel")
        AUTOMODEL,
        @JsonProperty("automodel-vision2seq")
        AUTOMODEL_VISION2SEQ,
        @JsonProperty("automodel-causallm")
        AUTOMODEL_CAUSALLM,
        @JsonProperty("automodel-imagetexttotext")
        AUTOMODEL_IMAGETEXTTOTEXT

    }

}
