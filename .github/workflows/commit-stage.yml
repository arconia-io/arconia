name: Commit Stage
on:
  push:
    branches:
      - main
    paths-ignore:
      - '.editorconfig'
      - '.gitignore'
      - '.sdkmanrc'
      - '*.adoc'
      - '*.png'
      - '*.md'
      - 'docs/**'
      - '.github/ISSUE_TEMPLATE/**'
      - '.github/*.md'
      - '.github/*.yml'
      - '.github/*.yaml'
  pull_request:
    branches:
      - main
    paths-ignore:
      - '.editorconfig'
      - '.gitignore'
      - '.sdkmanrc'
      - '*.adoc'
      - '*.png'
      - '*.md'
      - 'docs/**'
      - '.github/ISSUE_TEMPLATE/**'
      - '.github/*.md'
      - '.github/*.yml'
      - '.github/*.yaml'

permissions:
  contents: read

jobs:
  build:
    name: Build
    runs-on: ubuntu-24.04
    permissions:
      contents: write
      discussions: write
      issues: write
      pull-requests: write
    steps:
      - name: Check out source code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@3a4f6e1af504cf6a31855fa899c6aa5355ba6c12 # v4.7.0
        with:
          java-version: 21
          distribution: temurin

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@06832c7b30a0129d7fb559bcc6e43d26f6374244 # v4.3.1

      - name: Compile and test
        run: ./gradlew build -Dorg.gradle.parallel=false

      - name: Generate SBOMs
        run: ./gradlew cyclonedxBom

      - name: Stage artifacts to local directory
        if: ${{ github.ref == 'refs/heads/main' }}
        run: ./gradlew publish

      - name: Define environment variables for Java project
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          GROUP=$(./gradlew properties | grep 'group:' | awk '{print $2}')
          echo "GROUP=$GROUP" >> $GITHUB_ENV
          echo "group: $GROUP"
          
          VERSION=$(./gradlew properties | grep 'version:' | awk '{print $2}')
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "version: $VERSION"

      - name: Release
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: jreleaser/release-action@80ffb38fa759704eed4db5c7fcaae3ac1079473e # v2
        with:
          arguments: full-release
        env:
          JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          JRELEASER_GPG_PUBLIC_KEY: ${{ secrets.JRELEASER_GPG_PUBLIC_KEY }}
          JRELEASER_GPG_SECRET_KEY: ${{ secrets.JRELEASER_GPG_SECRET_KEY }}
          JRELEASER_GPG_PASSPHRASE: ${{ secrets.JRELEASER_GPG_PASSPHRASE }}
          JRELEASER_DEPLOY_MAVEN_NEXUS2_CENTRAL_USERNAME: ${{ secrets.JRELEASER_NEXUS2_MAVEN_CENTRAL_USERNAME }}
          JRELEASER_DEPLOY_MAVEN_NEXUS2_CENTRAL_TOKEN: ${{ secrets.JRELEASER_NEXUS2_MAVEN_CENTRAL_TOKEN }}
          JRELEASER_PROJECT_JAVA_GROUP_ID: ${{ env.GROUP }}
          JRELEASER_PROJECT_VERSION: ${{ env.VERSION }}

      - name: Upload JReleaser output
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          retention-days: 1
          name: jreleaser-output
          path: |
            out/jreleaser/trace.log
            out/jreleaser/output.properties

      - name: Trigger documentation update
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: peter-evans/repository-dispatch@ff45666b9427631e3450c54a1bcbee4d9ff4d7c0 # v3.0.0
        with:
          token: ${{ secrets.DISPATCH_TOKEN }}
          repository: arconia-io/arconia-io.github.io
          event-type: docs-update
