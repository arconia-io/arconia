name: Commit Stage

on:
  push:
    branches:
      - main
    paths-ignore:
      - '.editorconfig'
      - '.gitattributes'
      - '.gitignore'
      - '.sdkmanrc'
      - '*.adoc'
      - '*.png'
      - '*.md'
      - '*.txt'
      - 'catalog-info.yaml'
      - 'docs/**'
      - '.github/ISSUE_TEMPLATE/**'
      - '.github/*.md'
      - '.github/*.yml'
      - '.github/*.yaml'
  pull_request:
    branches:
      - main

permissions:
  contents: read

jobs:
  build:
    name: Build
    runs-on: ubuntu-24.04
    permissions:
      contents: write
      discussions: write
      issues: write
      pull-requests: write
    steps:
      - name: Check out source code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@dded0888837ed1f317902acf8a20df0ad188d165 # v5.0.0
        with:
          java-version: 21
          distribution: temurin

      - name: Validate Gradle Wrapper
        uses: gradle/actions/wrapper-validation@4d9f0ba0025fe599b4ebab900eb7f3a1d93ef4c2 # v5.0.0

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@4d9f0ba0025fe599b4ebab900eb7f3a1d93ef4c2 # v5.0.0

      - name: Compile and test
        run: ./gradlew build -Dorg.gradle.parallel=false

      - name: Generate SBOMs
        run: ./gradlew cyclonedxBom

      - name: Stage artifacts to local directory
        if: ${{ github.ref == 'refs/heads/main' }}
        run: ./gradlew publish

      - name: Define environment variables for Java project
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          GROUP=$(./gradlew properties | grep 'group:' | awk '{print $2}')
          echo "GROUP=$GROUP" >> $GITHUB_ENV
          echo "group: $GROUP"
          
          VERSION=$(./gradlew properties | grep 'version:' | awk '{print $2}')
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "version: $VERSION"

      - name: Release
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: jreleaser/release-action@c4c93fd7f7ae96bfd98f5deb621c42b781455b77 # v2.4.3
        with:
          arguments: full-release
        env:
          JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          JRELEASER_GPG_PUBLIC_KEY: ${{ secrets.JRELEASER_GPG_PUBLIC_KEY }}
          JRELEASER_GPG_SECRET_KEY: ${{ secrets.JRELEASER_GPG_SECRET_KEY }}
          JRELEASER_GPG_PASSPHRASE: ${{ secrets.JRELEASER_GPG_PASSPHRASE }}
          JRELEASER_MAVENCENTRAL_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          JRELEASER_MAVENCENTRAL_TOKEN: ${{ secrets.SONATYPE_TOKEN }}
          JRELEASER_NEXUS2_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          JRELEASER_NEXUS2_TOKEN: ${{ secrets.SONATYPE_TOKEN }}
          JRELEASER_PROJECT_JAVA_GROUP_ID: ${{ env.GROUP }}
          JRELEASER_PROJECT_VERSION: ${{ env.VERSION }}

      - name: Upload JReleaser output
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          retention-days: 1
          name: jreleaser-output
          path: |
            out/jreleaser/trace.log
            out/jreleaser/output.properties

      - name: Trigger documentation update
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: peter-evans/repository-dispatch@5fc4efd1a4797ddb68ffd0714a238564e4cc0e6f # v4.0.0
        with:
          token: ${{ secrets.DISPATCH_TOKEN }}
          repository: arconia-io/arconia-docs
          event-type: docs-update
